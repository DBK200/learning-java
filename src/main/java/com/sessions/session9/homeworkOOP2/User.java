package com.sessions.session9.homeworkOOP2;

import java.time.LocalDate;
import java.util.Objects;
import java.util.Random;

public class User implements Comparable<User>
{
    private int age;
    private String name;
    private LocalDate dateOfBirth;
    private Nationality nationality;
    private boolean hasJob;
    private final int idUser;
    private static int nrOfUsers = 0;
    private static int incrementIDs = 1;
    private int autoGeneratedAge(int origin, int bound)
    {
        Random random = new Random();

        return random.nextInt(origin, bound);
    }

    public User()
    {
        age = autoGeneratedAge(18, 80);
        name = "Unkown";
        dateOfBirth = LocalDate.now();
        nationality = Nationality.Unknown;
        hasJob = false;
        idUser = incrementIDs++;
        nrOfUsers++;
    }

    public User(final int age, final String name, final LocalDate dateOfBirth, final Nationality nationality, final boolean hasJob)
    {
        this.age = age;
        this.name = name;
        this.dateOfBirth = dateOfBirth;
        this.nationality = nationality;
        this.hasJob = hasJob;
        this.idUser = incrementIDs++;
        nrOfUsers++;
    }

    public int getAge()
    {
        return age;
    }

    public String getName()
    {
        return name;
    }

    public LocalDate getDateOfBirth()
    {
        return dateOfBirth;
    }

    public Nationality getNationality()
    {
        return nationality;
    }

    public boolean isHasJob()
    {
        return hasJob;
    }

    public int getIdUser()
    {
        return idUser;
    }

    public static int getNumberOfUsers()
    {
        return nrOfUsers;
    }

    public void setAge(final int age)
    {
        if (age < 18)
        {
            return;
        }

        this.age = age;
    }

    public void setName(final String name)
    {
        if (name.length() < 3)
        {
            return;
        }

        this.name = name;
    }

    public void setDateOfBirth(final LocalDate dateOfBirth)
    {
        this.dateOfBirth = dateOfBirth;
    }

    public void setNationality(final Nationality nationality)
    {
        this.nationality = nationality;
    }

    public void setHasJob(final boolean hasJob)
    {
        this.hasJob = hasJob;
    }

    @Override
    public String toString()
    {
        return "The name of the user is: " + name
                + "\nThe age of the user is: " + age
                + "\nThe nationality of the user is: " + nationality
                + "\nUser id is: " + idUser
                + "\nUser is having a job: " + hasJob;
    }

    @Override
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }

        if (object == null || getClass() != object.getClass())
        {
            return false;
        }

        User user = (User) object;

        return age == user.age && Objects.equals(name, user.name)
                && Objects.equals(nationality, user.nationality)
                && Objects.equals(dateOfBirth, user.dateOfBirth);
    }

    @Override
    public int hashCode()
    {
        return Objects.hashCode(name);
    }

    @Override
    public int compareTo(User otherUser)
    {
        return otherUser.age - this.age;
    }

}